#!/usr/bin/python
import os, base64, random, string, hashlib, uuid

def encrypt1(lines):
	enc, i = b"", random.randint(1,4)
	if i == 1:
		for line in lines:
			enc += base64.b16encode(line.encode('utf-8'))+b'\n'
	elif i == 2:
		for line in lines:
			enc += base64.b32encode(line.encode('utf-8'))+b'\n'
	elif i == 3:
		for line in lines:
			enc += base64.b64encode(line.encode('utf-8'))+b'\n'
	elif i == 4:
		for line in lines:
			enc += base64.b85encode(line.encode('utf-8'))+b'\n'
	return enc, i


def encrypt2(code):
    enc, i = b"", random.randint(1, 9)
    if i == 1:
        enc = hashlib.md5(code).hexdigest()
    elif i == 2:
        enc = hashlib.sha256(code).hexdigest()
    elif i == 3:
        enc = hashlib.sha224(code).hexdigest()
    elif i == 4:
        enc = hashlib.sha384(code).hexdigest()
    elif i == 5:
        enc = hashlib.sha3_384(code).hexdigest()
    elif i == 6:
        enc = hashlib.sha3_256(code).hexdigest()
    elif i == 7:
        enc = hashlib.sha512(code).hexdigest()
    elif i == 8:
        enc = hashlib.sha3_512(code).hexdigest()
    elif i == 9:
        enc = hashlib.sha3_224(code).hexdigest()

    return enc

with open("AbraWorm.py", 'r') as ip:
    all_of_it = ip.readlines()
    code, opt = encrypt1(all_of_it)
    code = encrypt2(code)
    print(code)
    
print(str(uuid.uuid4()))

msg = "hello i am from message handler _id_"
msg = msg.strip()
msg = msg.split()
msg[-1] = str(uuid.uuid4())
msg = " ".join(msg)
print(msg)